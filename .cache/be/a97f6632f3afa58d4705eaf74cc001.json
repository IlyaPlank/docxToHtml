{"id":"node_modules/mammoth/lib/html/simplify.js","dependencies":[{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\package.json","includedInParent":true,"mtime":1599153242175},{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\package.json","includedInParent":true,"mtime":1599153235378},{"name":"underscore","loc":{"line":1,"column":16},"parent":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\lib\\html\\simplify.js","resolved":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\underscore\\underscore.js"},{"name":"./ast","loc":{"line":3,"column":18},"parent":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\lib\\html\\simplify.js","resolved":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\lib\\html\\ast.js"}],"generated":{"js":"var _ = require(\"underscore\");\n\nvar ast = require(\"./ast\");\n\nfunction simplify(nodes) {\n    return collapse(removeEmpty(nodes));\n}\n\nfunction collapse(nodes) {\n    var children = [];\n    \n    nodes.map(collapseNode).forEach(function(child) {\n        appendChild(children, child);\n    });\n    return children;\n}\n\nfunction collapseNode(node) {\n    return collapsers[node.type](node);\n}\n\nvar collapsers = {\n    element: collapseElement,\n    text: identity,\n    forceWrite: identity\n};\n\nfunction collapseElement(node) {\n    return ast.elementWithTag(node.tag, collapse(node.children));\n}\n\nfunction identity(value) {\n    return value;\n}\n\nfunction appendChild(children, child) {\n    var lastChild = children[children.length - 1];\n    if (child.type === \"element\" && !child.tag.fresh && lastChild && lastChild.type === \"element\" && child.tag.matchesElement(lastChild.tag)) {\n        if (child.tag.separator) {\n            appendChild(lastChild.children, ast.text(child.tag.separator));\n        }\n        child.children.forEach(function(grandChild) {\n            // Mutation is fine since simplifying elements create a copy of the children.\n            appendChild(lastChild.children, grandChild);\n        });\n    } else {\n        children.push(child);\n    }\n}\n\nfunction removeEmpty(nodes) {\n    return flatMap(nodes, function(node) {\n        return emptiers[node.type](node);\n    });\n}\n\nfunction flatMap(values, func) {\n    return _.flatten(_.map(values, func), true);\n}\n\nvar emptiers = {\n    element: elementEmptier,\n    text: textEmptier,\n    forceWrite: neverEmpty\n};\n\nfunction neverEmpty(node) {\n    return [node];\n}\n\nfunction elementEmptier(element) {\n    var children = removeEmpty(element.children);\n    if (children.length === 0 && !ast.isVoidElement(element)) {\n        return [];\n    } else {\n        return [ast.elementWithTag(element.tag, children)];\n    }\n}\n\nfunction textEmptier(node) {\n    if (node.value.length === 0) {\n        return [];\n    } else {\n        return [node];\n    }\n}\n\nmodule.exports = simplify;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mammoth/lib/html/simplify.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}}],"sources":{"node_modules/mammoth/lib/html/simplify.js":"var _ = require(\"underscore\");\n\nvar ast = require(\"./ast\");\n\nfunction simplify(nodes) {\n    return collapse(removeEmpty(nodes));\n}\n\nfunction collapse(nodes) {\n    var children = [];\n    \n    nodes.map(collapseNode).forEach(function(child) {\n        appendChild(children, child);\n    });\n    return children;\n}\n\nfunction collapseNode(node) {\n    return collapsers[node.type](node);\n}\n\nvar collapsers = {\n    element: collapseElement,\n    text: identity,\n    forceWrite: identity\n};\n\nfunction collapseElement(node) {\n    return ast.elementWithTag(node.tag, collapse(node.children));\n}\n\nfunction identity(value) {\n    return value;\n}\n\nfunction appendChild(children, child) {\n    var lastChild = children[children.length - 1];\n    if (child.type === \"element\" && !child.tag.fresh && lastChild && lastChild.type === \"element\" && child.tag.matchesElement(lastChild.tag)) {\n        if (child.tag.separator) {\n            appendChild(lastChild.children, ast.text(child.tag.separator));\n        }\n        child.children.forEach(function(grandChild) {\n            // Mutation is fine since simplifying elements create a copy of the children.\n            appendChild(lastChild.children, grandChild);\n        });\n    } else {\n        children.push(child);\n    }\n}\n\nfunction removeEmpty(nodes) {\n    return flatMap(nodes, function(node) {\n        return emptiers[node.type](node);\n    });\n}\n\nfunction flatMap(values, func) {\n    return _.flatten(_.map(values, func), true);\n}\n\nvar emptiers = {\n    element: elementEmptier,\n    text: textEmptier,\n    forceWrite: neverEmpty\n};\n\nfunction neverEmpty(node) {\n    return [node];\n}\n\nfunction elementEmptier(element) {\n    var children = removeEmpty(element.children);\n    if (children.length === 0 && !ast.isVoidElement(element)) {\n        return [];\n    } else {\n        return [ast.elementWithTag(element.tag, children)];\n    }\n}\n\nfunction textEmptier(node) {\n    if (node.value.length === 0) {\n        return [];\n    } else {\n        return [node];\n    }\n}\n\nmodule.exports = simplify;\n"},"lineCount":89}},"error":null,"hash":"c7f9d81ab0bdea0715ec8f388dc550ac","cacheData":{"env":{}}}