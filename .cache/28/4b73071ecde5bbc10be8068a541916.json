{"id":"node_modules/mammoth/node_modules/jszip/lib/base64.js","dependencies":[{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\package.json","includedInParent":true,"mtime":1599153242175},{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\package.json","includedInParent":true,"mtime":1599153235395}],"generated":{"js":"'use strict';\n// private property\nvar _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n\n// public method for encoding\nexports.encode = function(input, utf8) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    while (i < input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        }\n        else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n\n    }\n\n    return output;\n};\n\n// public method for decoding\nexports.decode = function(input, utf8) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    while (i < input.length) {\n\n        enc1 = _keyStr.indexOf(input.charAt(i++));\n        enc2 = _keyStr.indexOf(input.charAt(i++));\n        enc3 = _keyStr.indexOf(input.charAt(i++));\n        enc4 = _keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n        }\n\n    }\n\n    return output;\n\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/base64.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"node_modules/mammoth/node_modules/jszip/lib/base64.js":"'use strict';\n// private property\nvar _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n\n// public method for encoding\nexports.encode = function(input, utf8) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    while (i < input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        }\n        else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n\n    }\n\n    return output;\n};\n\n// public method for decoding\nexports.decode = function(input, utf8) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    while (i < input.length) {\n\n        enc1 = _keyStr.indexOf(input.charAt(i++));\n        enc2 = _keyStr.indexOf(input.charAt(i++));\n        enc3 = _keyStr.indexOf(input.charAt(i++));\n        enc4 = _keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n        }\n\n    }\n\n    return output;\n\n};\n"},"lineCount":71}},"error":null,"hash":"ec8fd95bda375d5f244c5b1373af6150","cacheData":{"env":{}}}