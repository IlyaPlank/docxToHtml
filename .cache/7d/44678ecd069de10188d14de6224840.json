{"id":"node_modules/mammoth/node_modules/jszip/lib/utils.js","dependencies":[{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\package.json","includedInParent":true,"mtime":1599153242175},{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\package.json","includedInParent":true,"mtime":1599153235395},{"name":"./support","loc":{"line":2,"column":22},"parent":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\lib\\utils.js","resolved":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\lib\\support.js"},{"name":"./compressions","loc":{"line":3,"column":27},"parent":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\lib\\utils.js","resolved":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\lib\\compressions.js"},{"name":"./nodeBuffer","loc":{"line":4,"column":25},"parent":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\lib\\utils.js","resolved":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\lib\\nodeBuffer.js"}],"generated":{"js":"'use strict';\nvar support = require('./support');\nvar compressions = require('./compressions');\nvar nodeBuffer = require('./nodeBuffer');\n/**\n * Convert a string to a \"binary string\" : a string containing only char codes between 0 and 255.\n * @param {string} str the string to transform.\n * @return {String} the binary string.\n */\nexports.string2binary = function(str) {\n    var result = \"\";\n    for (var i = 0; i < str.length; i++) {\n        result += String.fromCharCode(str.charCodeAt(i) & 0xff);\n    }\n    return result;\n};\nexports.arrayBuffer2Blob = function(buffer, mimeType) {\n    exports.checkSupport(\"blob\");\n\tmimeType = mimeType || 'application/zip';\n\n    try {\n        // Blob constructor\n        return new Blob([buffer], {\n            type: mimeType\n        });\n    }\n    catch (e) {\n\n        try {\n            // deprecated, browser only, old way\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            return builder.getBlob(mimeType);\n        }\n        catch (e) {\n\n            // well, fuck ?!\n            throw new Error(\"Bug : can't construct the Blob.\");\n        }\n    }\n\n\n};\n/**\n * The identity function.\n * @param {Object} input the input.\n * @return {Object} the same input.\n */\nfunction identity(input) {\n    return input;\n}\n\n/**\n * Fill in an array with a string.\n * @param {String} str the string to use.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated).\n * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array.\n */\nfunction stringToArrayLike(str, array) {\n    for (var i = 0; i < str.length; ++i) {\n        array[i] = str.charCodeAt(i) & 0xFF;\n    }\n    return array;\n}\n\n/**\n * Transform an array-like object to a string.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.\n * @return {String} the result.\n */\nfunction arrayLikeToString(array) {\n    // Performances notes :\n    // --------------------\n    // String.fromCharCode.apply(null, array) is the fastest, see\n    // see http://jsperf.com/converting-a-uint8array-to-a-string/2\n    // but the stack is limited (and we can get huge arrays !).\n    //\n    // result += String.fromCharCode(array[i]); generate too many strings !\n    //\n    // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2\n    var chunk = 65536;\n    var result = [],\n        len = array.length,\n        type = exports.getTypeOf(array),\n        k = 0,\n        canUseApply = true;\n      try {\n         switch(type) {\n            case \"uint8array\":\n               String.fromCharCode.apply(null, new Uint8Array(0));\n               break;\n            case \"nodebuffer\":\n               String.fromCharCode.apply(null, nodeBuffer(0));\n               break;\n         }\n      } catch(e) {\n         canUseApply = false;\n      }\n\n      // no apply : slow and painful algorithm\n      // default browser on android 4.*\n      if (!canUseApply) {\n         var resultStr = \"\";\n         for(var i = 0; i < array.length;i++) {\n            resultStr += String.fromCharCode(array[i]);\n         }\n    return resultStr;\n    }\n    while (k < len && chunk > 1) {\n        try {\n            if (type === \"array\" || type === \"nodebuffer\") {\n                result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));\n            }\n            else {\n                result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));\n            }\n            k += chunk;\n        }\n        catch (e) {\n            chunk = Math.floor(chunk / 2);\n        }\n    }\n    return result.join(\"\");\n}\n\nexports.applyFromCharCode = arrayLikeToString;\n\n\n/**\n * Copy the data from an array-like to an other array-like.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated.\n * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array.\n */\nfunction arrayLikeToArrayLike(arrayFrom, arrayTo) {\n    for (var i = 0; i < arrayFrom.length; i++) {\n        arrayTo[i] = arrayFrom[i];\n    }\n    return arrayTo;\n}\n\n// a matrix containing functions to transform everything into everything.\nvar transform = {};\n\n// string to ?\ntransform[\"string\"] = {\n    \"string\": identity,\n    \"array\": function(input) {\n        return stringToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return transform[\"string\"][\"uint8array\"](input).buffer;\n    },\n    \"uint8array\": function(input) {\n        return stringToArrayLike(input, new Uint8Array(input.length));\n    },\n    \"nodebuffer\": function(input) {\n        return stringToArrayLike(input, nodeBuffer(input.length));\n    }\n};\n\n// array to ?\ntransform[\"array\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": identity,\n    \"arraybuffer\": function(input) {\n        return (new Uint8Array(input)).buffer;\n    },\n    \"uint8array\": function(input) {\n        return new Uint8Array(input);\n    },\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n    }\n};\n\n// arraybuffer to ?\ntransform[\"arraybuffer\"] = {\n    \"string\": function(input) {\n        return arrayLikeToString(new Uint8Array(input));\n    },\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));\n    },\n    \"arraybuffer\": identity,\n    \"uint8array\": function(input) {\n        return new Uint8Array(input);\n    },\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(new Uint8Array(input));\n    }\n};\n\n// uint8array to ?\ntransform[\"uint8array\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return input.buffer;\n    },\n    \"uint8array\": identity,\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n    }\n};\n\n// nodebuffer to ?\ntransform[\"nodebuffer\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return transform[\"nodebuffer\"][\"uint8array\"](input).buffer;\n    },\n    \"uint8array\": function(input) {\n        return arrayLikeToArrayLike(input, new Uint8Array(input.length));\n    },\n    \"nodebuffer\": identity\n};\n\n/**\n * Transform an input into any type.\n * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer.\n * If no output type is specified, the unmodified input will be returned.\n * @param {String} outputType the output type.\n * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert.\n * @throws {Error} an Error if the browser doesn't support the requested output type.\n */\nexports.transformTo = function(outputType, input) {\n    if (!input) {\n        // undefined, null, etc\n        // an empty string won't harm.\n        input = \"\";\n    }\n    if (!outputType) {\n        return input;\n    }\n    exports.checkSupport(outputType);\n    var inputType = exports.getTypeOf(input);\n    var result = transform[inputType][outputType](input);\n    return result;\n};\n\n/**\n * Return the type of the input.\n * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.\n * @param {Object} input the input to identify.\n * @return {String} the (lowercase) type of the input.\n */\nexports.getTypeOf = function(input) {\n    if (typeof input === \"string\") {\n        return \"string\";\n    }\n    if (Object.prototype.toString.call(input) === \"[object Array]\") {\n        return \"array\";\n    }\n    if (support.nodebuffer && nodeBuffer.test(input)) {\n        return \"nodebuffer\";\n    }\n    if (support.uint8array && input instanceof Uint8Array) {\n        return \"uint8array\";\n    }\n    if (support.arraybuffer && input instanceof ArrayBuffer) {\n        return \"arraybuffer\";\n    }\n};\n\n/**\n * Throw an exception if the type is not supported.\n * @param {String} type the type to check.\n * @throws {Error} an Error if the browser doesn't support the requested type.\n */\nexports.checkSupport = function(type) {\n    var supported = support[type.toLowerCase()];\n    if (!supported) {\n        throw new Error(type + \" is not supported by this browser\");\n    }\n};\nexports.MAX_VALUE_16BITS = 65535;\nexports.MAX_VALUE_32BITS = -1; // well, \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\" is parsed as -1\n\n/**\n * Prettify a string read as binary.\n * @param {string} str the string to prettify.\n * @return {string} a pretty string.\n */\nexports.pretty = function(str) {\n    var res = '',\n        code, i;\n    for (i = 0; i < (str || \"\").length; i++) {\n        code = str.charCodeAt(i);\n        res += '\\\\x' + (code < 16 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n    }\n    return res;\n};\n\n/**\n * Find a compression registered in JSZip.\n * @param {string} compressionMethod the method magic to find.\n * @return {Object|null} the JSZip compression object, null if none found.\n */\nexports.findCompression = function(compressionMethod) {\n    for (var method in compressions) {\n        if (!compressions.hasOwnProperty(method)) {\n            continue;\n        }\n        if (compressions[method].magic === compressionMethod) {\n            return compressions[method];\n        }\n    }\n    return null;\n};\n/**\n* Cross-window, cross-Node-context regular expression detection\n* @param  {Object}  object Anything\n* @return {Boolean}        true if the object is a regular expression,\n* false otherwise\n*/\nexports.isRegExp = function (object) {\n    return Object.prototype.toString.call(object) === \"[object RegExp]\";\n};\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/utils.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}}],"sources":{"node_modules/mammoth/node_modules/jszip/lib/utils.js":"'use strict';\nvar support = require('./support');\nvar compressions = require('./compressions');\nvar nodeBuffer = require('./nodeBuffer');\n/**\n * Convert a string to a \"binary string\" : a string containing only char codes between 0 and 255.\n * @param {string} str the string to transform.\n * @return {String} the binary string.\n */\nexports.string2binary = function(str) {\n    var result = \"\";\n    for (var i = 0; i < str.length; i++) {\n        result += String.fromCharCode(str.charCodeAt(i) & 0xff);\n    }\n    return result;\n};\nexports.arrayBuffer2Blob = function(buffer, mimeType) {\n    exports.checkSupport(\"blob\");\n\tmimeType = mimeType || 'application/zip';\n\n    try {\n        // Blob constructor\n        return new Blob([buffer], {\n            type: mimeType\n        });\n    }\n    catch (e) {\n\n        try {\n            // deprecated, browser only, old way\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            return builder.getBlob(mimeType);\n        }\n        catch (e) {\n\n            // well, fuck ?!\n            throw new Error(\"Bug : can't construct the Blob.\");\n        }\n    }\n\n\n};\n/**\n * The identity function.\n * @param {Object} input the input.\n * @return {Object} the same input.\n */\nfunction identity(input) {\n    return input;\n}\n\n/**\n * Fill in an array with a string.\n * @param {String} str the string to use.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated).\n * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array.\n */\nfunction stringToArrayLike(str, array) {\n    for (var i = 0; i < str.length; ++i) {\n        array[i] = str.charCodeAt(i) & 0xFF;\n    }\n    return array;\n}\n\n/**\n * Transform an array-like object to a string.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.\n * @return {String} the result.\n */\nfunction arrayLikeToString(array) {\n    // Performances notes :\n    // --------------------\n    // String.fromCharCode.apply(null, array) is the fastest, see\n    // see http://jsperf.com/converting-a-uint8array-to-a-string/2\n    // but the stack is limited (and we can get huge arrays !).\n    //\n    // result += String.fromCharCode(array[i]); generate too many strings !\n    //\n    // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2\n    var chunk = 65536;\n    var result = [],\n        len = array.length,\n        type = exports.getTypeOf(array),\n        k = 0,\n        canUseApply = true;\n      try {\n         switch(type) {\n            case \"uint8array\":\n               String.fromCharCode.apply(null, new Uint8Array(0));\n               break;\n            case \"nodebuffer\":\n               String.fromCharCode.apply(null, nodeBuffer(0));\n               break;\n         }\n      } catch(e) {\n         canUseApply = false;\n      }\n\n      // no apply : slow and painful algorithm\n      // default browser on android 4.*\n      if (!canUseApply) {\n         var resultStr = \"\";\n         for(var i = 0; i < array.length;i++) {\n            resultStr += String.fromCharCode(array[i]);\n         }\n    return resultStr;\n    }\n    while (k < len && chunk > 1) {\n        try {\n            if (type === \"array\" || type === \"nodebuffer\") {\n                result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));\n            }\n            else {\n                result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));\n            }\n            k += chunk;\n        }\n        catch (e) {\n            chunk = Math.floor(chunk / 2);\n        }\n    }\n    return result.join(\"\");\n}\n\nexports.applyFromCharCode = arrayLikeToString;\n\n\n/**\n * Copy the data from an array-like to an other array-like.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated.\n * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array.\n */\nfunction arrayLikeToArrayLike(arrayFrom, arrayTo) {\n    for (var i = 0; i < arrayFrom.length; i++) {\n        arrayTo[i] = arrayFrom[i];\n    }\n    return arrayTo;\n}\n\n// a matrix containing functions to transform everything into everything.\nvar transform = {};\n\n// string to ?\ntransform[\"string\"] = {\n    \"string\": identity,\n    \"array\": function(input) {\n        return stringToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return transform[\"string\"][\"uint8array\"](input).buffer;\n    },\n    \"uint8array\": function(input) {\n        return stringToArrayLike(input, new Uint8Array(input.length));\n    },\n    \"nodebuffer\": function(input) {\n        return stringToArrayLike(input, nodeBuffer(input.length));\n    }\n};\n\n// array to ?\ntransform[\"array\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": identity,\n    \"arraybuffer\": function(input) {\n        return (new Uint8Array(input)).buffer;\n    },\n    \"uint8array\": function(input) {\n        return new Uint8Array(input);\n    },\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n    }\n};\n\n// arraybuffer to ?\ntransform[\"arraybuffer\"] = {\n    \"string\": function(input) {\n        return arrayLikeToString(new Uint8Array(input));\n    },\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));\n    },\n    \"arraybuffer\": identity,\n    \"uint8array\": function(input) {\n        return new Uint8Array(input);\n    },\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(new Uint8Array(input));\n    }\n};\n\n// uint8array to ?\ntransform[\"uint8array\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return input.buffer;\n    },\n    \"uint8array\": identity,\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n    }\n};\n\n// nodebuffer to ?\ntransform[\"nodebuffer\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return transform[\"nodebuffer\"][\"uint8array\"](input).buffer;\n    },\n    \"uint8array\": function(input) {\n        return arrayLikeToArrayLike(input, new Uint8Array(input.length));\n    },\n    \"nodebuffer\": identity\n};\n\n/**\n * Transform an input into any type.\n * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer.\n * If no output type is specified, the unmodified input will be returned.\n * @param {String} outputType the output type.\n * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert.\n * @throws {Error} an Error if the browser doesn't support the requested output type.\n */\nexports.transformTo = function(outputType, input) {\n    if (!input) {\n        // undefined, null, etc\n        // an empty string won't harm.\n        input = \"\";\n    }\n    if (!outputType) {\n        return input;\n    }\n    exports.checkSupport(outputType);\n    var inputType = exports.getTypeOf(input);\n    var result = transform[inputType][outputType](input);\n    return result;\n};\n\n/**\n * Return the type of the input.\n * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.\n * @param {Object} input the input to identify.\n * @return {String} the (lowercase) type of the input.\n */\nexports.getTypeOf = function(input) {\n    if (typeof input === \"string\") {\n        return \"string\";\n    }\n    if (Object.prototype.toString.call(input) === \"[object Array]\") {\n        return \"array\";\n    }\n    if (support.nodebuffer && nodeBuffer.test(input)) {\n        return \"nodebuffer\";\n    }\n    if (support.uint8array && input instanceof Uint8Array) {\n        return \"uint8array\";\n    }\n    if (support.arraybuffer && input instanceof ArrayBuffer) {\n        return \"arraybuffer\";\n    }\n};\n\n/**\n * Throw an exception if the type is not supported.\n * @param {String} type the type to check.\n * @throws {Error} an Error if the browser doesn't support the requested type.\n */\nexports.checkSupport = function(type) {\n    var supported = support[type.toLowerCase()];\n    if (!supported) {\n        throw new Error(type + \" is not supported by this browser\");\n    }\n};\nexports.MAX_VALUE_16BITS = 65535;\nexports.MAX_VALUE_32BITS = -1; // well, \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\" is parsed as -1\n\n/**\n * Prettify a string read as binary.\n * @param {string} str the string to prettify.\n * @return {string} a pretty string.\n */\nexports.pretty = function(str) {\n    var res = '',\n        code, i;\n    for (i = 0; i < (str || \"\").length; i++) {\n        code = str.charCodeAt(i);\n        res += '\\\\x' + (code < 16 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n    }\n    return res;\n};\n\n/**\n * Find a compression registered in JSZip.\n * @param {string} compressionMethod the method magic to find.\n * @return {Object|null} the JSZip compression object, null if none found.\n */\nexports.findCompression = function(compressionMethod) {\n    for (var method in compressions) {\n        if (!compressions.hasOwnProperty(method)) {\n            continue;\n        }\n        if (compressions[method].magic === compressionMethod) {\n            return compressions[method];\n        }\n    }\n    return null;\n};\n/**\n* Cross-window, cross-Node-context regular expression detection\n* @param  {Object}  object Anything\n* @return {Boolean}        true if the object is a regular expression,\n* false otherwise\n*/\nexports.isRegExp = function (object) {\n    return Object.prototype.toString.call(object) === \"[object RegExp]\";\n};\n\n"},"lineCount":327}},"error":null,"hash":"625d63dce0902913155e03d2163ec308","cacheData":{"env":{}}}