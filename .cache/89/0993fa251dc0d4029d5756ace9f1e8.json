{"id":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","dependencies":[{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\package.json","includedInParent":true,"mtime":1599153242175},{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\package.json","includedInParent":true,"mtime":1599153235395}],"generated":{"js":"'use strict';\nfunction CompressedObject() {\n    this.compressedSize = 0;\n    this.uncompressedSize = 0;\n    this.crc32 = 0;\n    this.compressionMethod = null;\n    this.compressedContent = null;\n}\n\nCompressedObject.prototype = {\n    /**\n     * Return the decompressed content in an unspecified format.\n     * The format will depend on the decompressor.\n     * @return {Object} the decompressed content.\n     */\n    getContent: function() {\n        return null; // see implementation\n    },\n    /**\n     * Return the compressed content in an unspecified format.\n     * The format will depend on the compressed conten source.\n     * @return {Object} the compressed content.\n     */\n    getCompressedContent: function() {\n        return null; // see implementation\n    }\n};\nmodule.exports = CompressedObject;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"node_modules/mammoth/node_modules/jszip/lib/compressedObject.js":"'use strict';\nfunction CompressedObject() {\n    this.compressedSize = 0;\n    this.uncompressedSize = 0;\n    this.crc32 = 0;\n    this.compressionMethod = null;\n    this.compressedContent = null;\n}\n\nCompressedObject.prototype = {\n    /**\n     * Return the decompressed content in an unspecified format.\n     * The format will depend on the decompressor.\n     * @return {Object} the decompressed content.\n     */\n    getContent: function() {\n        return null; // see implementation\n    },\n    /**\n     * Return the compressed content in an unspecified format.\n     * The format will depend on the compressed conten source.\n     * @return {Object} the compressed content.\n     */\n    getCompressedContent: function() {\n        return null; // see implementation\n    }\n};\nmodule.exports = CompressedObject;\n"},"lineCount":29}},"error":null,"hash":"fea2eca22d94b84545f7e046f55dbcaa","cacheData":{"env":{}}}