{"id":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","dependencies":[{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\package.json","includedInParent":true,"mtime":1599153242175},{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\lop\\package.json","includedInParent":true,"mtime":1599153235394}],"generated":{"js":"var TokenIterator = module.exports = function(tokens, startIndex) {\n    this._tokens = tokens;\n    this._startIndex = startIndex || 0;\n};\n\nTokenIterator.prototype.head = function() {\n    return this._tokens[this._startIndex];\n};\n\nTokenIterator.prototype.tail = function(startIndex) {\n    return new TokenIterator(this._tokens, this._startIndex + 1);\n};\n\nTokenIterator.prototype.toArray = function() {\n    return this._tokens.slice(this._startIndex);\n};\n\nTokenIterator.prototype.end = function() {\n    return this._tokens[this._tokens.length - 1];\n};\n\n// TODO: doesn't need to be a method, can be a separate function,\n// which simplifies implementation of the TokenIterator interface\nTokenIterator.prototype.to = function(end) {\n    var start = this.head().source;\n    var endToken = end.head() || end.end();\n    return start.to(endToken.source);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"node_modules/mammoth/node_modules/lop/lib/TokenIterator.js":"var TokenIterator = module.exports = function(tokens, startIndex) {\n    this._tokens = tokens;\n    this._startIndex = startIndex || 0;\n};\n\nTokenIterator.prototype.head = function() {\n    return this._tokens[this._startIndex];\n};\n\nTokenIterator.prototype.tail = function(startIndex) {\n    return new TokenIterator(this._tokens, this._startIndex + 1);\n};\n\nTokenIterator.prototype.toArray = function() {\n    return this._tokens.slice(this._startIndex);\n};\n\nTokenIterator.prototype.end = function() {\n    return this._tokens[this._tokens.length - 1];\n};\n\n// TODO: doesn't need to be a method, can be a separate function,\n// which simplifies implementation of the TokenIterator interface\nTokenIterator.prototype.to = function(end) {\n    var start = this.head().source;\n    var endToken = end.head() || end.end();\n    return start.to(endToken.source);\n};\n"},"lineCount":29}},"error":null,"hash":"de65f9d4472209db19ed01ffbbb37464","cacheData":{"env":{}}}