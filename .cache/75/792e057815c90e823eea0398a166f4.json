{"id":"node_modules/mammoth/node_modules/jszip/lib/flate.js","dependencies":[{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\package.json","includedInParent":true,"mtime":1599153242175},{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\package.json","includedInParent":true,"mtime":1599153235395},{"name":"pako","loc":{"line":4,"column":19},"parent":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\jszip\\lib\\flate.js","resolved":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\pako\\index.js"}],"generated":{"js":"'use strict';\nvar USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');\n\nvar pako = require(\"pako\");\nexports.uncompressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\nexports.compressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\n\nexports.magic = \"\\x08\\x00\";\nexports.compress = function(input, compressionOptions) {\n    return pako.deflateRaw(input, {\n        level : compressionOptions.level || -1 // default compression\n    });\n};\nexports.uncompress =  function(input) {\n    return pako.inflateRaw(input);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mammoth/node_modules/jszip/lib/flate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules/mammoth/node_modules/jszip/lib/flate.js":"'use strict';\nvar USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');\n\nvar pako = require(\"pako\");\nexports.uncompressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\nexports.compressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\n\nexports.magic = \"\\x08\\x00\";\nexports.compress = function(input, compressionOptions) {\n    return pako.deflateRaw(input, {\n        level : compressionOptions.level || -1 // default compression\n    });\n};\nexports.uncompress =  function(input) {\n    return pako.inflateRaw(input);\n};\n"},"lineCount":17}},"error":null,"hash":"ef8bd6ff9dd1f8be8c89f3bad554068d","cacheData":{"env":{}}}