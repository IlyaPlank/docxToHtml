{"id":"node_modules/mammoth/lib/xml/writer.js","dependencies":[{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\package.json","includedInParent":true,"mtime":1599153242175},{"name":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\package.json","includedInParent":true,"mtime":1599153235378},{"name":"underscore","loc":{"line":1,"column":16},"parent":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\lib\\xml\\writer.js","resolved":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\underscore\\underscore.js"},{"name":"xmlbuilder","loc":{"line":2,"column":25},"parent":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\lib\\xml\\writer.js","resolved":"D:\\Work\\Other\\Testing\\docxToHtml\\node_modules\\mammoth\\node_modules\\xmlbuilder\\lib\\index.js"}],"generated":{"js":"var _ = require(\"underscore\");\nvar xmlbuilder = require(\"xmlbuilder\");\n\n\nexports.writeString = writeString;\n\n\nfunction writeString(root, namespaces) {\n    var uriToPrefix = _.invert(namespaces);\n    \n    var nodeWriters = {\n        element: writeElement,\n        text: writeTextNode\n    };\n\n    function writeNode(builder, node) {\n        return nodeWriters[node.type](builder, node);\n    }\n\n    function writeElement(builder, element) {\n        var elementBuilder = builder.element(mapElementName(element.name), element.attributes);\n        element.children.forEach(function(child) {\n            writeNode(elementBuilder, child);\n        });\n    }\n    \n    function mapElementName(name) {\n        var longFormMatch = /^\\{(.*)\\}(.*)$/.exec(name);\n        if (longFormMatch) {\n            var prefix = uriToPrefix[longFormMatch[1]];\n            return prefix + (prefix === \"\" ? \"\" : \":\") + longFormMatch[2];\n        } else {\n            return name;\n        }\n    }\n    \n    function writeDocument(root) {\n        var builder = xmlbuilder\n            .create(mapElementName(root.name), {\n                version: '1.0',\n                encoding: 'UTF-8',\n                standalone: true\n            });\n        \n        _.forEach(namespaces, function(uri, prefix) {\n            var key = \"xmlns\" + (prefix === \"\" ? \"\" : \":\" + prefix);\n            builder.attribute(key, uri);\n        });\n        \n        root.children.forEach(function(child) {\n            writeNode(builder, child);\n        });\n        return builder.end();\n    }\n\n    return writeDocument(root);\n}\n\nfunction writeTextNode(builder, node) {\n    builder.text(node.value);\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mammoth/lib/xml/writer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}}],"sources":{"node_modules/mammoth/lib/xml/writer.js":"var _ = require(\"underscore\");\nvar xmlbuilder = require(\"xmlbuilder\");\n\n\nexports.writeString = writeString;\n\n\nfunction writeString(root, namespaces) {\n    var uriToPrefix = _.invert(namespaces);\n    \n    var nodeWriters = {\n        element: writeElement,\n        text: writeTextNode\n    };\n\n    function writeNode(builder, node) {\n        return nodeWriters[node.type](builder, node);\n    }\n\n    function writeElement(builder, element) {\n        var elementBuilder = builder.element(mapElementName(element.name), element.attributes);\n        element.children.forEach(function(child) {\n            writeNode(elementBuilder, child);\n        });\n    }\n    \n    function mapElementName(name) {\n        var longFormMatch = /^\\{(.*)\\}(.*)$/.exec(name);\n        if (longFormMatch) {\n            var prefix = uriToPrefix[longFormMatch[1]];\n            return prefix + (prefix === \"\" ? \"\" : \":\") + longFormMatch[2];\n        } else {\n            return name;\n        }\n    }\n    \n    function writeDocument(root) {\n        var builder = xmlbuilder\n            .create(mapElementName(root.name), {\n                version: '1.0',\n                encoding: 'UTF-8',\n                standalone: true\n            });\n        \n        _.forEach(namespaces, function(uri, prefix) {\n            var key = \"xmlns\" + (prefix === \"\" ? \"\" : \":\" + prefix);\n            builder.attribute(key, uri);\n        });\n        \n        root.children.forEach(function(child) {\n            writeNode(builder, child);\n        });\n        return builder.end();\n    }\n\n    return writeDocument(root);\n}\n\nfunction writeTextNode(builder, node) {\n    builder.text(node.value);\n}\n"},"lineCount":62}},"error":null,"hash":"91a00d6c0afde85d526da0f8eeea2a31","cacheData":{"env":{}}}